Source: Do 10% of developers do *nothing*?

 are 10% of programmers not actually doing any work. So there's this research study coming out of Stanford that's going viral on the internet. And by the way, I'm putting research study in air quotes because it's basically a canvographic posing as a research paper. But what the research slash canvographic says is that 9.5% of software engineers are ghost engineers or they're not actually doing any real work. This guy also calls them 0.1x engineers, which is probably the opposite of a 10x engineer. This guy is clearly trying to get written up in like CMBC and he succeeded. Like a million news articles about this now. Though not only is author making this claim, he's also saying the quiet part out loud. He's advocating for companies to do mass layoffs to get rid of these so-called ghost engineers. I think advocating for layoffs is universally a pretty crummy thing to say. But in an era of probably the worst tech job market in 10 to 15 years where layoffs are already constantly happening, saying this and not being 1,000% sure of your claim is pretty despicable. So I'm going to break down what the research actually says, whether this lines up with my experience as a software engineer. And then at the end, we need to get to the bottom of is this actually true. So what is he actually saying? Basically the claim is that 10% of engineers are just phoning it in, they're faking their job. And really this claim is nothing new. There's such a stereotype that engineers, especially engineers in big tech, have these cushy jobs where they don't actually do anything. And as an engineer in big tech, I am particularly sensitive about this. But I will say a lot of this probably comes from content online specifically day in my life content that was really popular during COVID, where somebody that works at a big company like Microsoft or Amazon goes around and uses all the perks and like shows off like, oh, I get free coffee and I get free massages, not at Amazon, but you know, doesn't show them doing actual work. Actually, I'm across a reddit throughout the other day, where people were complaining about these type of content creators. And somebody said, you guys should follow a bird of tech because she makes tech content, but she's actually a programmer. I will first of all say that time it made my day, it made me very happy. I have never actually come across somebody talking about me online positively. So that was great. At the same time, I do support the girls that make day in my life content. And I am saying girls because it is 90% of the time women. Yes, the things they show are not necessarily representative of an eight hour work day, but you are watching a 60 second TikTok short. That should be expected. People are not gonna show you eight hours of them coding and expect it to go viral. They are showing the things that are gonna get views. That's because they are not showing you their stupid computer screen. Does not mean they don't do work. They cannot show what's on your computer screen. So yes, you're just showing all the good parts and the parts that are gonna get views online, which is the free breakfast and the free coffee. And that is just logical. Is that something I would personally post? No, I mean, frankly, I just don't wanna make free advertising for my company, but just because I'm not posting that does not mean I'm not using those same perks. And using perks does not make me any less of an engineer or does not mean I'm any less productive. If anything, using the company gym, go into the company dinner, means that you are staying longer, you're staying later, or even you're coming in on the weekends to utilize like that gym perk, for example, which might mean you're working more. Anyway, sorry, I got a fun attangement. To send those people at every job that just aren't quite doing that much. And I do get that at bigger companies, there's way more bureaucracy. There's way more of an opportunity to sort of get like lost in that mix of like, I'm waiting for an approval, I'm gonna prove an approval, an approval, and nobody quite knows what's going on. But with all that said, we are in the worst job market in tech since probably 2008. There's tons of layoffs already happening. The claim that 9.5% of engineers do not actually do work, seems really out of touch to me. He says specifically that these ghost engineers are making trivial changes like editing one line or character, pretending to work. I feel like this is a fundamental misunderstanding of what a software engineer does, because one line changes can often be the most important changes. I think this guy is imagining a one line code change being like, renaming a variable. But if I were to submit a pull request to my coworker, where I'm just renaming a random variable in the code base, my coworker would be like, what's wrong? What's going on? What are you doing? One line code change to me is A, going to be turning one or off a feature, which is generally very important, and requires talking in different stakeholders, whether that be something user-facing, like adding a button, or whether that be like changing a service in the back end, or changing one line is going to be like changing a config file somewhere, where you're maybe giving more resources to a job that's failing. Maybe you got paid for that. And yes, that's a one line change, but you didn't just know where the file was and know what to change. You had to figure out what was going wrong with the job. All of that is intangible work that this guy is just not considering. And even if that one line code change is just changing the color of a button, that probably required a 30 minute meeting with somebody in products, or somebody in UX, or at the very least, with your manager to tell you that that had to happen. But it's not obvious. The guy who made these viral tweets who's the first author on this paper is not a professional developer. He's actually an MBA, which in my opinion, an MBA grad is the natural enemy of the software engineer. By the way, I'm intentionally not saying this guy's name because being bullied on the internet is scary. But I am going to link all the relevant info in the description. Okay, so let's jump into the research slash camera graphic. I went to read the actual research paper, assuming there was going to be a research paper about these ghost engineers. But I realize no such paper existed. The actual paper that these freaking canva infographics are based off of is not available. But there is some research that I think is relevant that is available on the website. But what it does is not measure these ghost engineers. It is measuring code quality from code reviews, from AI. And I have to assume that this is relevant because they're doing something very similar to what the canva infographic is doing, which is they have a panel of experts. And they also have an AI model that is evaluating code quality. And in the freaking canva picture, it looks like they're roughly doing that same thing. What this paper does go into detail with is how they measured that code quality. But let's take a step back here. Why are we measuring code quality? Coding is not the only thing that programmers do. And he says on Twitter that he took people out whose primary job is not writing codes. But it's not really that black and white. Managers and tech leads will often write a little bit of code, but not very often. And we'll delegate bigger coding tasks to people on their team. Are those people not doing any work because they're not producing lines of code? And figuring out who shorter should not be writing code is not trivial, especially because he says that he found these companies by just DMing people on LinkedIn. So let's assume he's talking to somebody in HR like high level management. If you asked my boss, his boss, his boss, his boss, is Alberta's primary job writing code? That person would say who is Alberta? I don't know. Maybe he asked the engineers point blank. Like, again, this is not published anywhere. We were just hypothesizing, but frankly, I doubt it. And if you work in tech, this is extremely obvious, but just to say it for everybody else, engineers are like writing design doc. They're meeting with product managers to figure out like what they actually need to build. They're meeting with customers sometimes to get requirements from external users. If they're more senior in the organization, they're designing things for more junior engineers to do. Maybe they're helping with like performance management if they're also a manager. There's a lot of things the programmers do. And his argument here is they're not just measuring lines of code, they're also measuring code quality. But again, that's just looking at code. And it's fairly obvious why they chose this. It's a lot easier to measure this tangible thing than it is to measure like the mentorship benefit you give somebody or like how well you design a system. But just because it's easier to measure that doesn't mean that's what we should be measuring. So yeah, I do think the research is ridiculous. And again, like the paper hasn't been like released yet. So we'll see, maybe I'm wrong, but I don't think I can be wrong. If the core of the paper stays the same, which is measuring amount of code or code quality to figure out how much work an engineer does. And also just feel like why is it always engineers? I never see any research studies that are like 90% of marketers don't do their job. Like why is it that software engineers are always being targeted for this stuff? And okay, that's a rhetorical question, but I'm gonna answer it for you anyway. Number one, engineers make a lot of money generally. So they're enticing to get rid of for companies to closely related companies are doing a lot of layoffs right now. And they want to keep justifying doing those layoffs. Like I can very easily see this research being cited in an email by like Andy Jazzy, the CEO of Amazon, come January, when he's saying, oh, sorry, we have to lay off 10% of engineers and this freaking random Stanford MBA so that 10% is the right number of engineers that are not doing real work. And then third of all, a lot of people just don't understand what programmers do. And if people don't understand what you do, it feels to them like you're not doing anything. Because it can be hard to explain what you do, especially if you're the type of engineer that is keeping a system running, but perhaps not running a lot of code to build new features for that system. It can be hard for people to understand why you're important and therefore it feels easy for them to just lay you off. And again, I'm trying to not make this about the author himself. Like he's at a university, maybe making something that is so corporate friendly is gonna help him with research grants, but to put out this research online and to intentionally try to make it viral, right? You say ghost engineers, he said point one ex engineers. Like those are terms used to get the attention in the media is so damaging to tech workers. It is so damaging to frankly the labor movement in this country. Underlining workers themselves and saying that workers are the issue, not the industry itself, not the companies, not management specifically. He did not say that there's ghost managers, he said there's ghost engineers. It just makes me so upset and so sad. And I should not need to explain like how high the stakes are here. This is people's livelihoods. You know, this is in a lot of cases, especially in tech, this is people's ability to stay in this country, to live here because you're there on H1B, because you're on another visa. And for him to be intentionally part of the reason that hundreds of thousands of people could lose their job is just so beyond upsetting. Anyway, if you like this content, please subscribe. I generally make sure to form content, but I would love to hear your feedback about some of my longer form videos. And like I promised in past videos, if this research should have come out and I'm super wrong, I will make you a crying and apologizing video. So stick around for that and we will see.